# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export NVM_DIR=~/.nvm
source ~/.nvm/nvm.sh
export ZSH="$HOME/.oh-my-zsh"
export PATH=$PATH:./node_modules/.bin
#source $HOME/dotfiles/custom_script/start_working.sh
# Python path
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
export PATH="/usr/local/opt/python@2/libexec/bin:$PATH"



# Look in ~/.oh-my-zsh/themes/
ZSH_THEME=""

# TMUX
# Automatically start tmux
#ZSH_TMUX_AUTOSTART=true

# Automatically connect to a previous session if it exists
#ZSH_TMUX_AUTOCONNECT=true

# Enable command auto-correction.
# ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

function startWorking() {
  export PATH=$PATH:$HOME/dotfiles/custom_script/bin
  sh onelocal_custom_script_for_tmux.sh
}


# Setting rg as the default source for fzf
export FZF_DEFAULT_COMMAND='rg --files'

# Apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"


# FZF settings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPS="--extended --bind=ctrl-j:up,ctrl-k:down"
export FZF_DEFAULT_COMMAND='fd --follow --exclude "node_modules"'

# Set location of z installation
. /usr/local/etc/profile.d/z.sh

# Plugins
plugins=(
  git
  node
  tmux
  brew
  colored-man-pages
  zsh-syntax-highlighting
  zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh

# System settings
export GTK_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
export QT_IM_MODULE=fcitx
export LC_ALL=en_US.UTF-8
export OOO_FORCE_DESKTOP="gnome"

export JAVA_HOME=$(/usr/libexec/java_home)
export PATH=$HOME/last_semester/DB/instantclient_12_2:$PATH
export EDITOR='nvim'
export NVIM_TUI_ENABLE_TRUE_COLOR=1

# prevent weird error(maximum function call stuff)
zstyle ':vcs_info:*' enable git hg

export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm

#Aliases
alias v="nvim"
alias zshc="nvim ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias reload="source ~/.zshrc"
alias settings="nvim ~/.config/nvim/init.vim"
alias vplugins="nvim ~/dotfiles/nvim/plugins.vim"
alias code="/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code"
alias ns="npm run start"
alias yis="yarn && yarn start"
alias nt="npm test"
alias gs="git status"
alias gd="git diff"
alias ls="colorls -lA --sd"
alias ll="ls -al"

# Set spaceship as prompt
autoload -U promptinit; promptinit
prompt pure

#source /usr/share/nvm/init-nvm.sh

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  if [[ -f .nvmrc && -r .nvmrc ]]; then
    nvm use
  elif [[ $(nvm version) != $(nvm version default)  ]]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

g_npm_prefix=$(npm prefix -g)
export PATH="$g_npm_prefix:$PATH"


test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Colorls work around for caltalina
eval "$(rbenv init -)"
